---

- name: Get the non root remote user
  set_fact:
    remote_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

- name: Import vim configuration
  import_tasks: "{{ playbook_dir }}/roles/base/tasks/vim.yml"

- name: Run Portainer container
  community.docker.docker_container:
    name: portainer
    image: portainer/portainer-ce
    state: started
    restart_policy: unless-stopped
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    detach: true

- name: Run the Ollama/Open-WebUI container
  community.docker.docker_container:
    name: open-webui
    image: ghcr.io/open-webui/open-webui:main
    state: started
    restart_policy: always
    network_mode: host
    volumes:
      - "open-webui:/app/backend/data"
    env:
      OLLAMA_BASE_URL: "http://{{ llm_address }}:11434"
      OPENAI_API_KEY: "{{ openai_api }}"
    detach: yes
  ignore_errors: yes

  #- name: Run BIND container
  #  community.docker.docker_container:
  #    name: bind
  #    image: sameersbn/bind:latest
  #    state: started
  #    restart_policy: unless-stopped
  #    ports:
  #      - "53:53"
  #      - "53:53/udp"
  #    detach: true

- name: Grafana container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana-enterprise
    state: started
    restart_policy: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    detach: true

- name: Run Prometheus container
  community.docker.docker_container:
    name: prometheus
    image: prom/prometheus
    state: started
    restart_policy: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - /home/{{ remote_user }}/.config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    detach: true
    pull: yes


- name: Run redis container
  community.docker.docker_container:
    name: redis
    image: redis:7.2
    state: started
    restart_policy: always
    network_mode: host
    detach: yes

- name: Nginx ollama proxy
  vars:
    domain_name: "{{ llm_domain }}"
    host: localhost
    port: 8080
  template:
    src: "files/nginx_proxy.j2"
    dest: "/etc/nginx/sites-enabled/{{ domain_name }}"
    owner: root
    group: root
    mode: '0644'
  notify: Nginx reload

- name: Install Let's Encrypt certificate
  command: "certbot certonly -n --webroot -w /var/www/html --no-eff-email --agree-tos -d {{ llm_domain }}"
  notify: Nginx reload

